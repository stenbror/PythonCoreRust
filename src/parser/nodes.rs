
use crate::parser::tokens::{ Token };

pub enum ASTNode {
    NamedExpr(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    Test(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    Lambda(u32, u32, Box<Token>, Option<Box<ASTNode>>, Box<Token>, Box<ASTNode>),
    OrTest(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    AndTest(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    NotTest(u32, u32, Box<Token>, Box<ASTNode>),
    LessComparison(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    LessEqualComparison(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    EqualComparison(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    GreaterComparison(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    GreaterEqualComparison(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    NotEqualComparison(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    InComparison(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    IsComparison(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    NotInComparison(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    IsNotComparison(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    StarExpr(u32, u32, Box<Token>, Box<ASTNode>),
    Expr(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    XorExpr(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    AndExpr(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    ShiftLeftExpr(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    ShiftRightExpr(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    PlusArithExpr(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    MinusArithExpr(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    MulTerm(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    DivTerm(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    FloorDivTerm(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    ModuloTerm(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    MatriceTerm(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    UnaryPlus(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    UnaryMinus(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    UnaryInvert(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    PowerExpr(u32, u32, Box<ASTNode>, Box<Token>, Box<Token>, Box<ASTNode>),
    AtomExpr(u32, u32, Option<Box<Token>>, Box<ASTNode>, Box<[ASTNode]>),
    AtomName(u32, u32, Box<Token>),
    AtomNumber(u32, u32, Box<Token>),
    AtomString(u32, u32, Box<[Token]>),
    AtomElipsis(u32, u32, Box<Token>),
    AtomNone(u32, u32, Box<Token>),
    AtomTrue(u32, u32, Box<Token>),
    AtomFalse(u32, u32, Box<Token>),
    AtomTuple(u32, u32, Box<Token>, Option<Box<ASTNode>>, Box<Token>),
    AtomList(u32, u32, Box<Token>, Option<Box<ASTNode>>, Box<Token>),
    AtomDictionary(u32, u32, Box<Token>, Option<Box<ASTNode>>, Box<Token>),
    AtomSet(u32, u32, Box<Token>, Box<Option<ASTNode>>, Box<Token>),
    TestListComp(u32, u32, Box<ASTNode>, Box<Token>),
    CallTrailer(u32, u32, Box<Token>, Option<Box<ASTNode>>, Box<Token>),
    IndexTrailer(u32, u32, Box<Token>, Option<Box<ASTNode>>, Box<Token>),
    DotNameTrailer(u32, u32, Box<Token>, Box<Token>),
    SubscriptList(u32, u32, Box<ASTNode>, Box<Token>),
    Subscript(u32, u32, Option<Box<ASTNode>>, Option<Box<Token>>, Option<Box<ASTNode>>, Option<Box<Token>>, Option<Box<ASTNode>>),
    ExprList(u32, u32, Box<ASTNode>, Box<Token>),
    TestList(u32, u32, Box<ASTNode>, Box<Token>),
    DictionaryContainer(u32, u32, Box<ASTNode>, Box<Token>),
    DictionaryEntry(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    SetContainer(u32, u32, Box<ASTNode>, Box<Token>),
    MulSet(u32, u32, Box<Token>, Box<ASTNode>),
    PowerDictionary(u32, u32, Box<Token>, Box<ASTNode>),
    ClassDef(u32, u32, Box<Token>, Box<Token>, Option< (Box<Token>, Option<Box<ASTNode>>, Box<Token>) >, Box<Token>, Box<ASTNode>),
    ArgList(u32, u32, Box<ASTNode>, Box<Token>),
    Argument(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    SyncCompForComprehension(u32, u32, Box<Token>, Box<ASTNode>, Box<Token>, Box<ASTNode>, Option<Box<ASTNode>>),
    CompForComprehension(u32, u32,  Box<Token>, Box<ASTNode>),
    CompIfComprehension(u32, u32, Box<Token>, Box<ASTNode>, Option<Box<ASTNode>>),
    YieldExpr(u32, u32, Box<Token>, Box<ASTNode>),
    YielfFromExpr(u32, u32, Box<Token>, Box<Token>, Box<ASTNode>),
    FuncBodySuite(u32, u32, Box<Token>, Option<(Box<Token>, Box<Token>)>, Box<Token>, Box<[Box<ASTNode>]>, Box<Token>),
    FuncTypeInput(u32, u32, Box<ASTNode>, Box<[Box<ASTNode>]>, Box<Token>),
    FuncType(u32, u32, Box<Token>, Option<Box<ASTNode>>, Box<Token>, Box<Token>, Box<ASTNode>),
    TypeList(u32, u32, Box<[Box<ASTNode>]>, Box<[Box<Token>]>, Option<(Box<Token>, Box<ASTNode>)>, Option<(Box<Token>, Box<ASTNode>)>),
    SimpleStmtList(u32, u32, Box<[Box<ASTNode>]>, Box<[Box<Token>]>, Box<Token> ),
    PlusAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    MinusAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    MulAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    DivAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    FloorDivAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    ModuloAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    MatriceAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    PowerAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    ShiftLeftAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    ShiftRightAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    BitOrAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    BitXorAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    BitAndAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    AnnAssignStmt(u32, u32, Box<ASTNode>, Box<Token>, Box<ASTNode>, Option<(Box<Token>, Box<ASTNode>)>),
    AssignmentStmt(u32, u32, Box<ASTNode>, Box<(Box<[Box<Token>]>, Box<[Box<ASTNode>]>)>, Option<Box<Token>>),
    DelStmt(u32, u32, Box<Token>, Box<ASTNode>),
    PassStmt(u32, u32, Box<Token>),
    BreakStmt(u32, u32, Box<Token>),
    ContinueStmt(u32, u32, Box<Token>),
    ReturnStmt(u32, u32, Box<Token>, Box<ASTNode>),
    RaiseStmt(u32, u32, Box<Token>, Option<(Box<ASTNode>, Option<(Box<Token>, Box<ASTNode>)>)>),
    ImportNameStmt(u32, u32, Box<Token>, Box<ASTNode>),
    ImportFromStmt(u32, u32, Box<Token>, Option<Box<[Box<Token>]>>, Box<ASTNode>, Box<Token>, Option<Box<Token>>, Option<Box<ASTNode>>, Option<Box<Token>>),
    ImportAsName(u32, u32, Box<Token>, Option<(Box<Token>, Box<Token>)>),
    DottedAsNameStmt(u32, u32, Box<ASTNode>, Option<Box<(Box<Token>, Box<Token>)>>),
    ImportAsNamesStmt(u32, u32, Box<[Box<ASTNode>]>, Box<[Box<Token>]>),
    DottedAsNamesStmt(u32, u32, Box<[Box<ASTNode>]>, Box<[Box<Token>]>),
    DottedNameStmt(u32, u32, Box<[Box<Token>]>, Box<[Box<Token>]>),
    GlobalStmt(u32, u32, Box<Token>, Box<[Box<Token>]>, Box<[Box<Token>]>),
    NonLocalStmt(u32, u32, Box<Token>, Box<[Box<Token>]>, Box<[Box<Token>]>),
    AssertStmt(u32, u32, Box<Token>, Box<ASTNode>, Option<Box<(Box<Token>, Box<ASTNode>)>>),
    AsyncStmt(u32, u32, Box<Token>, Box<ASTNode>),
    IfStmt(u32, u32, Box<Token>, Box<ASTNode>, Box<Token>, Box<ASTNode>, Option<Box<[Box<ASTNode>]>>, Option<Box<ASTNode>>),
    ElifStmt(u32, u32, Box<Token>, Box<ASTNode>, Box<Token>, Box<ASTNode>),
    Else(u32, u32, Box<Token>, Box<Token>, Box<ASTNode>),
}

